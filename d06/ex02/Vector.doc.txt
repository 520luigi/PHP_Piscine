<- Vector ----------------------------------------------------------------------
The Vector class handles space 3D Vectors.
It has three coordinates and an homogenous parameter (always=0)

An instance is constructed from two Vertex origin and destination.
It represents then the vector between those two points.
new Vector( array( 'dest' => #instanceOfVertex, 'orig' => #instanceOfVertex );
Ff the vertex 'orig' is not precised, it will then be (0,0,0) as default.

All Attributes are private, you may want to use getters.
When a Vector is created, you wont be able to change its values after.
aka-> no setters;

The following method are provided for this Class:

- magnitude() : give the length of the instanced Vector.

- normalize() : give the normalized Vector corresponding (a fresh copy
if the instance was already normalized)

- add( Vector $rhs ) : give the result of the addition between
the current instance and vector.

- sub( Vector $rhs ) : give the result of the subtraction between
the current instance and vector.

- opposite() : return the opposite Vector;

- scalarProduct( $k ) : return the product of the constant $k
and the current instance;

- cos( Vector $rhs ) : return the cosine between the current instance and vector

- dotProduct( Vector $rhs ) : return the scalar product of the current
instance and vector.

Vector crossProduct( Vector $rhs ) : return the cross product
(right handed set) of the current instance and vector.
---------------------------------------------------------------------- Vector ->
